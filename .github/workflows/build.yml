# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: build

on:
  [push]

env:
  RAILS_ENV: test
  NODE_ENV: test

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
        # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
        with:
          ruby-version: 2.7.1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache bundle directory
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}
            ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          yarn install

      - name: Generate assets key
        run: |
          git log --pretty=format:"%H" -n 1 app/javascript/ >> tmp/assets_key

      - name: Cache assets
        uses: actions/cache@v2
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ hashFiles('yarn.lock') }}-${{ hashFiles('tmp/assets_key') }}
          restore-keys: |
            ${{ runner.os }}-assets-${{ hashFiles('yarn.lock') }}-${{ hashFiles('/tmp/assets_key') }}
            ${{ runner.os }}-assets-${{ hashFiles('yarn.lock') }}-

      - name: Compile assets
        run: |
          bin/webpack

  rspec:
    needs: prepare

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: p0stgres

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
        # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
        with:
          ruby-version: 2.7.1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Restore bundle directory
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Restore node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}

      - name: Generate assets key
        run: |
          git log --pretty=format:"%H" -n 1 app/javascript/ >> tmp/assets_key

      - name: Restore assets
        uses: actions/cache@v2
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ hashFiles('yarn.lock') }}-${{ hashFiles('tmp/assets_key') }}

      - name: Verify postgres connection
        run: |
          while ! psql "postgresql://127.0.0.1:5432/?user=postgres&password=p0stgres" -c 'select 1;'; do
            sleep 1
          done

      - name: Setup bundler
        run: |
          bundle config path vendor/bundle

      - name: Setup Database
        run: |
          bundle exec rake db:create
        #          bundle exec rake db:schema:load

      - name: Run rspec
        run: |
          bundle exec rspec

      - name: Archive rspec result screenshots
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: rspec result screenshots
          path: tmp/screenshots

  jest:
    needs: prepare

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
        # change this to (see https://github.com/ruby/setup-ruby#versioning):
        # uses: ruby/setup-ruby@v1
        uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
        with:
          ruby-version: 2.7.1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Restore bundle directory
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('.ruby-version') }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Restore node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}

      - name: Generate assets key
        run: |
          git log --pretty=format:"%H" -n 1 app/javascript/ >> tmp/assets_key

      - name: Restore assets
        uses: actions/cache@v2
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ hashFiles('yarn.lock') }}-${{ hashFiles('tmp/assets_key') }}

      - name: Run Jest
        run: |
          yarn jest
